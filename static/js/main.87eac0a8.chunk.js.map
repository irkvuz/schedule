{"version":3,"sources":["components/ErrorBoundary/ErrorBoundary.tsx","api.tsx","Lists.tsx","SelectGroup.tsx","utils/customYandexMetrika.ts","utils/getTrimesterInfo.ts","utils/getWeekNumber.ts","constants/index.ts","Schedule/TabsWeekDays.tsx","utils/findNearestDay.ts","Schedule/TrimesterInfo.tsx","Schedule/Schedule.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ErrorBoundary","state","error","errorInfo","this","setState","Sentry","href","style","whiteSpace","toString","componentStack","props","children","React","Component","get","url","a","axios","response","data","api","getFaculties","getFacultiesWithGroups","getGroups","facultyId","getTrimesters","getSchedule","groupId","trimesterId","UniversalListPL","title","items","loading","useState","searchValue","setSearchValue","itemsFiltred","filter","item","Group","match","RegExp","FacultyName","Error","Search","data-testid","onChange","event","target","value","placeholder","dataSource","bordered","renderItem","Item","key","IdGroup","hasSchedule","hasOwnProperty","to","opacity","IdFaculty","UniversalListContainer","setItems","setLoading","useEffect","promise","console","loadItems","ListFaculties","document","location","search","ListGroups","params","SelectGroup","options","facultiesWithGroups","allowClear","size","defaultValue","fieldNames","label","showSearch","inputValue","path","names","some","option","name","toLowerCase","indexOf","YM_ID","Number","process","YANDEX_METRIKA_IDENTIFIER","reachGoal","identifier","window","ym","getTrimesterInfo","trimester","today","dateStart","parseJSON","dateFinish","weekNumberInSemester","sDateStart","differenceInCalendarISOWeeks","getWeekNumber","weeksInSemester","differenceInWeeks","weekNumberInYear","weeksInYear","dateStartString","format","dateFinishString","WEEK_DAY_NAMES","split","TabPane","LessonTypes","shortName","fullName","className","columns","render","text","record","index","Fragment","ClockCircleOutlined","StartTime","EnvironmentOutlined","Room","lessonType","find","type","LessonType","Lesson","FIO","UserOutlined","TabsWeekDays","tabPosition","setTabPosition","parity","setParity","defaultActiveKey","setDefaultActiveKey","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","undefined","schedule","week_number","weekday","minWeekday","map","v","WeekDay","reduce","min","nextWeekday","i","lesson","Odd","Math","findNearestDay","getISODay","String","weekdays","lessons","length","s","push","tabsContent","tab","showHeader","pagination","rowKey","r","checkedChildren","unCheckedChildren","checked","message","info","animated","log","TrimesterInfo","trimesterInfo","showIcon","Schedule","trimesters","setTrimesters","setTrimesterId","setSchedule","setFacultiesWithGroups","loadSchedule","localStorage","setItem","status","headers","request","config","then","faculty","f","id","group","groups","g","t","IdTrimester","selectedOptions","history","Main","URLSearchParams","has","Date","mode","theme","component","postfix","hash","rel","onClick","userAgent","navigator","test","isIos","standalone","setTimeout","browserHistory","createBrowserHistory","App","locale","ru_RU","listen","action","hit","pathname","Boolean","hostname","init","dsn","release","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87eac0a8.chunk.js","sourcesContent":["import React from 'react';\nimport * as Sentry from '@sentry/browser';\n\ntype Props = {};\ntype State = {\n  error: any;\n  errorInfo: any;\n};\n\nexport class ErrorBoundary extends React.Component<Props> {\n  state: State = {\n    error: null,\n    errorInfo: null,\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n    Sentry.captureException(error);\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <div>\n          <h2>Что-то пошло не так...</h2>\n          <p>\n            Пожалуйста, сообщи об ошибке{' '}\n            <a href=\"https://vk.com/savinyurii\">мне в ВК</a> или{' '}\n            <a href=\"https://t.me/yurasvn\">в Telegram</a>, я сделаю всё\n            от меня зависящее чтобы исправить :)\n          </p>\n          <div style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import axios from 'axios';\nimport {\n  ITrimesterOld,\n  ILessonOld,\n  IFacultyWithGroups,\n  IFacultyOld,\n  IGroupOld,\n} from './constants';\n\n/** Wrapper for `axios.get` that returns `response`.data */\nasync function get<T = any>(url: string) {\n  const response = await axios.get<T>(url);\n  return response.data;\n}\n\nlet api = {\n  getFaculties: () => get<IFacultyOld[]>(`/data/faculties.json`),\n  getFacultiesWithGroups: () =>\n    get<IFacultyWithGroups[]>(`/data/facultiesWithGroups.json`),\n  getGroups: (facultyId: string) =>\n    get<IGroupOld[]>(`/data/groups/${facultyId}.json`),\n  getTrimesters: () => get<ITrimesterOld[]>(`/data/trimesters.json`),\n  getSchedule: (groupId: string, trimesterId: string | number) =>\n    get<ILessonOld[]>(`/data/schedule/${trimesterId}/${groupId}.json`),\n};\n\nexport default api;\n","import { Input, List } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport api from './api';\nimport { IFacultyOld, IGroupOld } from './constants';\n\n/** Name of fields in source data, to take label and value */\ntype Item = IFacultyOld | IGroupOld;\ntype Items = Item[];\n\ntype UniversalListProps = {\n  title: string;\n  items: Items;\n  loading: boolean;\n};\n\n/**\n * Used for ListFaculties and ListGroups\n */\nfunction UniversalListPL(props: UniversalListProps) {\n  const { title, items, loading } = props;\n  const [searchValue, setSearchValue] = useState('');\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n    setSearchValue(searchValue);\n  };\n  const itemsFiltred = items.filter((item) => {\n    if ('Group' in item) return item.Group.match(new RegExp(searchValue, 'i'));\n    if ('FacultyName' in item) {\n      return item.FacultyName.match(new RegExp(searchValue, 'i'));\n    }\n    throw new Error('Unknown data format (ot IGroupOld nor IFacultyOld)');\n  });\n  return (\n    <>\n      <h2>{title}</h2>\n      <Input.Search\n        data-testid=\"input-search\"\n        onChange={handleSearch}\n        placeholder=\"Начните вводить название...\"\n      />\n      <br />\n      <br />\n      <List<Item>\n        dataSource={itemsFiltred}\n        loading={loading}\n        bordered\n        renderItem={(item) => {\n          if ('Group' in item) {\n            return (\n              <List.Item key={item.IdGroup}>\n                {item.hasSchedule || !item.hasOwnProperty('hasSchedule') ? (\n                  <Link to={`${item.IdGroup}/`}>{item.Group}</Link>\n                ) : (\n                  <span style={{ opacity: 0.5 }}>{item.Group}</span>\n                )}\n              </List.Item>\n            );\n          } else if ('FacultyName' in item) {\n            return (\n              <List.Item key={item.IdFaculty}>\n                <Link to={`${item.IdFaculty}/`}>{item.FacultyName}</Link>\n              </List.Item>\n            );\n          } else {\n            throw new Error(\n              'Unknown data format (ot IGroupOld nor IFacultyOld)'\n            );\n          }\n        }}\n      />\n    </>\n  );\n}\n\ninterface UniversalListContainerProps {\n  promise: Promise<Items>;\n  title: string;\n}\n\nfunction UniversalListContainer(props: UniversalListContainerProps) {\n  const [items, setItems] = useState<Items>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    async function loadItems() {\n      try {\n        let items = await props.promise;\n        setItems(items);\n      } catch (error) {\n        console.error(error);\n      }\n      setLoading(false);\n    }\n    loadItems();\n  }, [props.promise]);\n\n  return (\n    <UniversalListPL title={props.title} items={items} loading={loading} />\n  );\n}\n\nfunction ListFaculties() {\n  if (document.location.search === '?throwError') {\n    throw new Error('ListFaculties throw some error!!1');\n  }\n\n  return (\n    <UniversalListContainer\n      promise={api.getFaculties()}\n      title=\"Список факультетов\"\n    />\n  );\n}\n\ninterface MatchParams {\n  facultyId: string;\n}\n\nfunction ListGroups(props: RouteComponentProps<MatchParams>) {\n  const facultyId = props.match.params.facultyId;\n  return (\n    <UniversalListContainer\n      promise={api.getGroups(facultyId)}\n      title=\"Список групп\"\n    />\n  );\n}\n\nexport { ListFaculties, ListGroups, UniversalListPL };\n","import { Cascader } from 'antd';\nimport {\n  CascaderOptionType, CascaderValueType, FilledFieldNamesType\n} from 'antd/lib/cascader';\nimport React from 'react';\nimport { IFacultyWithGroups } from './constants';\nimport { MatchParams } from './Schedule/Schedule';\nexport interface Props extends MatchParams {\n  facultiesWithGroups: IFacultyWithGroups[],\n  onChange: (\n    value: CascaderValueType,\n    selectedOptions?: CascaderOptionType[]\n  ) => void;\n}\n\nfunction SelectGroup(props: Props) {\n\n  const filter = (\n    inputValue: string,\n    path: CascaderOptionType[],\n    names: FilledFieldNamesType\n  ) => {\n    return path.some((option) => {\n      return option.name.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;\n    });\n  };\n\n  return (\n    <Cascader\n      options={props.facultiesWithGroups}\n      onChange={props.onChange}\n      allowClear={false}\n      size=\"large\"\n      defaultValue={[props.facultyId, props.groupId]}\n      fieldNames={{ label: 'name', value: 'id', children: 'groups' }}\n      showSearch={{ filter: filter }}\n    />\n  );\n}\n\nexport default SelectGroup;\n","declare global {\n  interface Window {\n    ym: (id: number, action: 'hit' | 'reachGoal', args: any) => void;\n  }\n}\n\nconst YM_ID = Number(process.env.YANDEX_METRIKA_IDENTIFIER);\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nexport function reachGoal(identifier: string) {\n  if(!isProduction) {\n    console.log('[Yandex Metrika] reachGoal', identifier);\n  }\n\n  if (isProduction && typeof window.ym !== 'function') {\n    console.error('Tracking is missing');\n    return;\n  }\n\n  window.ym(YM_ID, 'reachGoal', identifier)\n}\n\nexport function hit(url: string) {\n  if(!isProduction) {\n    console.log('[Yandex Metrika] hit', url);\n  }\n\n  if (isProduction && typeof window.ym !== 'function') {\n    console.error('Tracking is missing');\n    return;\n  }\n\n  window.ym(YM_ID, 'hit', url);\n}\n","import { differenceInWeeks, format, parseJSON } from 'date-fns';\nimport { ITrimesterOld } from '../constants';\nimport { getWeekNumber } from './getWeekNumber';\n\nexport interface ITrimesterInfo {\n  weekNumberInSemester: number;\n  weekNumberInYear: number;\n  weeksInSemester: number;\n  weeksInYear: number;\n  dateStartString: string;\n  dateFinishString: string;\n}\n\nexport function getTrimesterInfo(\n  trimester: ITrimesterOld,\n  today: Date\n): ITrimesterInfo {\n  const dateStart = parseJSON(trimester.dateStart);\n  const dateFinish = parseJSON(trimester.dateFinish);\n\n  const weekNumberInSemester = getWeekNumber(\n    trimester.dateStart,\n    today\n  );\n  const weeksInSemester = differenceInWeeks(dateFinish, dateStart) + 1;\n  /**\n   * In second semestr it shoud be equal to number of weeks in prev simester\n   */\n  const weeksInPrevSemester = 15;\n  const weekNumberInYear = weekNumberInSemester + weeksInPrevSemester;\n  const weeksInYear = weeksInSemester + weeksInPrevSemester;\n\n  const dateStartString= format(dateStart, 'dd.MM.yyyy');\n  const dateFinishString = format(dateFinish, 'dd.MM.yyyy');\n\n  return {\n    weekNumberInSemester,\n    weekNumberInYear,\n    weeksInSemester,\n    weeksInYear,\n    dateStartString,\n    dateFinishString,\n  };\n}\n","import { differenceInCalendarISOWeeks, parseJSON } from 'date-fns';\n/**\n * Returns current week number in trimester, from `dateStart`\n * @param sDateStart strart of trimester, e.g. `2018-09-01T00:00:00`\n * @param sToday only for testing\n */\nexport function getWeekNumber(sDateStart: string, today: Date): number {\n  const dateStart = parseJSON(sDateStart);\n  // this function assume that first day of week is 1 - Monday\n  const diff = differenceInCalendarISOWeeks(today, dateStart);\n\n  // +1, becouse if difference is 0, it means that it's first week\n  return diff + 1;\n}\n","export * from './interfaces';\n\n/** Названия дней недели */\nexport const WEEK_DAY_NAMES = 'Воскресенье_Понедельник_Вторник_Среда_Четверг_Пятница_Суббота_Воскресенье'.split(\n  '_'\n);\n","import {\n  ClockCircleOutlined,\n  EnvironmentOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { message, Spin, Switch, Table, Tabs } from 'antd';\nimport { ColumnProps } from 'antd/lib/table';\nimport { TabsPosition } from 'antd/lib/tabs';\nimport { getISODay } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport { ILessonOld, WEEK_DAY_NAMES } from '../constants';\nimport { reachGoal } from '../utils/customYandexMetrika';\nimport { findNearestDay } from '../utils/findNearestDay';\nimport './TabsWeekDays.css';\n\nconst TabPane = Tabs.TabPane;\n\ninterface ILessonType {\n  shortName: string;\n  fullName: string;\n  className: string;\n}\n\nconst LessonTypes: ILessonType[] = [\n  { shortName: 'вне', fullName: 'внеучебное занятие', className: 'lek0' },\n  { shortName: 'л', fullName: 'лекция', className: 'lek1' },\n  { shortName: 'пр', fullName: 'практическое занятие', className: 'lek2' },\n  { shortName: 'лаб', fullName: 'лабораторная работа', className: 'lek3' },\n  { shortName: 'зач', fullName: 'зачет', className: 'lek4' },\n  { shortName: 'экз', fullName: 'экзамен', className: 'lek5' },\n  { shortName: 'конс', fullName: 'консультация', className: 'lek6' },\n  { shortName: 'п/с', fullName: 'пересдача', className: 'lek7' },\n  { shortName: '', fullName: 'внеплановое занятие', className: 'lek8' },\n  { shortName: 'тест', fullName: 'тестирование', className: 'lek9' },\n  { shortName: 'подг', fullName: 'подготовительные курсы', className: 'lek10' },\n  { shortName: 'ол', fullName: 'олимпиада', className: 'lek11' },\n  { shortName: 'конф', fullName: 'научная конференция', className: 'lek12' },\n  { shortName: 'откр', fullName: 'день открытых дверей', className: 'lek13' },\n];\n\nconst columns: ColumnProps<ILessonOld>[] = [\n  {\n    key: 'first',\n    className: 'StartTime_Room',\n    render: (text: any, record: ILessonOld, index: number) => {\n      return (\n        <React.Fragment>\n          <div className=\"StartTime\">\n            <ClockCircleOutlined /> {record.StartTime}\n          </div>\n          <div className=\"Room\">\n            <EnvironmentOutlined /> {record.Room}\n          </div>\n        </React.Fragment>\n      );\n    },\n  },\n  {\n    key: 'second',\n    render: (text: any, record: ILessonOld, index: number) => {\n      const lessonType =\n        LessonTypes.find((type) => type.shortName === record.LessonType) ||\n        LessonTypes[0];\n      return (\n        <>\n          <div>\n            <span\n              title={lessonType.fullName}\n              className={`LessonType ${lessonType.className}`}\n            >\n              {record.LessonType}\n            </span>\n            &nbsp;\n            {record.Lesson}\n          </div>\n          <div title={record.FIO}>\n            <UserOutlined /> {record.FIO}\n          </div>\n        </>\n      );\n    },\n  },\n];\n\ninterface Props {\n  loading: boolean;\n  schedule?: ILessonOld[];\n  week_number: number;\n  today: Date;\n}\n\ninterface IWeekDay {\n  name: string;\n  lessons: ILessonOld[];\n}\n\nfunction TabsWeekDays(props: Props) {\n  const [tabPosition, setTabPosition] = useState<TabsPosition>('top');\n  const [parity, setParity] = useState(false);\n  /** Вкладка (день недели), которая будет открыта при загрузке */\n  const [defaultActiveKey, setDefaultActiveKey] = useState<string>('1');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setTabPosition(window.innerWidth > window.innerHeight ? 'left' : 'top');\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (props.schedule === undefined) return;\n    const { minWeekday, parity } = findNearestDay({\n      week_number: props.week_number,\n      weekday: getISODay(props.today),\n      schedule: props.schedule,\n    });\n    setDefaultActiveKey(String(minWeekday));\n    setParity(parity);\n  }, [props.schedule, props.week_number, props.today]);\n\n  const handleParityChange = (parity: boolean) => {\n    setParity(parity);\n    message.info(`Показана ${parity ? 'четная' : 'нечетная'} неделя`, 1);\n    reachGoal('toggle_parity');\n  };\n\n  const handleTabChange = (key: string) => {\n    console.log(key);\n    reachGoal('change_weekday');\n  };\n\n  if (props.loading) return <Spin data-testid=\"loading-spinner\" />;\n\n  let weekdays: IWeekDay[] = [];\n\n  for (let i = 1; i <= 7; i++) {\n    weekdays[i] = {\n      name: WEEK_DAY_NAMES[i],\n      lessons: [],\n    };\n  }\n\n  if (!props.schedule || props.schedule.length <= 1) {\n    return <div>К сожалению, для этой группы нет расписания</div>;\n  }\n\n  for (let s of props.schedule) {\n    if (\n      !s.Error &&\n      (s.Odd === 0 || (parity && s.Odd === 2) || (!parity && s.Odd === 1))\n    ) {\n      weekdays[s.WeekDay].lessons.push(s);\n    }\n  }\n\n  const tabsContent = weekdays.map((weekday, i) => {\n    if (weekday.lessons.length === 0) return null;\n    return (\n      <TabPane tab={weekday.name} key={String(i)}>\n        <Table\n          dataSource={weekday.lessons}\n          columns={columns}\n          size=\"small\"\n          className=\"Schedule\"\n          showHeader={false}\n          pagination={false}\n          rowKey={(r) =>\n            r.WeekDay + r.StartTime + r.Odd + r.Lesson + r.LessonType + r.FIO\n          }\n        />\n      </TabPane>\n    );\n  });\n\n  return (\n    <>\n      {/* TODO This block should be moved to it's own component `WeekParitySwitcher` */}\n      <div className=\"switch-parity\">\n        Показать неделю: &nbsp;\n        <Switch\n          checkedChildren=\"ч\"\n          unCheckedChildren=\"н\"\n          checked={parity}\n          onChange={handleParityChange}\n          data-testid=\"week-parity-switcher\"\n        />\n      </div>\n      <Tabs\n        defaultActiveKey={defaultActiveKey}\n        tabPosition={tabPosition}\n        animated={false}\n        onChange={handleTabChange}\n      >\n        {tabsContent}\n      </Tabs>\n    </>\n  );\n}\n\nexport default TabsWeekDays;\n","import { ILessonOld } from '../constants/index';\n\ninterface Params {\n  /** Number of current week in Semester OR Year (depends on method) */\n  week_number: number;\n  /** Текущий день недели, 0 - sunday, 1 - monday... */\n  weekday: number;\n  schedule: ILessonOld[];\n}\n\n/**\n * Поиск ближайшего следующего дня для которого есть расписание\n */\nexport function findNearestDay({ week_number, weekday, schedule }: Params) {\n  let parity = week_number % 2 === 0;\n  // .map нужен, потому что .reduce может работать только с plain массивами\n  let minWeekday = schedule\n    .map((v) => v.WeekDay)\n    .reduce((min, nextWeekday, i) => {\n      const lesson = schedule[i];\n      if (lesson.Odd === 0 && nextWeekday < weekday) {\n        // пара каждую неделю и на этой неделе этот день уже прошел\n        // => пара будет на следующей\n        nextWeekday += 7;\n      } else if (\n        (lesson.Odd === 1 && parity) ||\n        (lesson.Odd === 2 && !parity)\n      ) {\n        // пара не на этой неделе\n        nextWeekday += 7;\n      } else if (nextWeekday < weekday) {\n        // пара на этой неделе, но день уже прошел\n        nextWeekday += 14;\n      }\n      return Math.min(min, nextWeekday);\n    }, 15); // здесь минимальным днем передаем максимально невозможное число\n\n  // We need to correct minWeekday value a little bit\n  if (minWeekday > 14) {\n    minWeekday -= 14;\n  } else if (minWeekday > 7) {\n    // если пара в день на следующей неделе, надо поменять четность\n    minWeekday -= 7;\n    parity = !parity;\n  }\n  return { minWeekday, parity };\n}\n","import { Alert } from 'antd';\nimport { format, getISODay } from 'date-fns';\nimport React from 'react';\nimport { ITrimesterInfo } from '../utils/getTrimesterInfo';\nimport { WEEK_DAY_NAMES } from '../constants';\n\ninterface Props {\n  trimesterInfo: ITrimesterInfo;\n  today: Date;\n}\n\nexport default function TrimesterInfo(props: Props) {\n  const {\n    weekNumberInSemester,\n    weekNumberInYear,\n    weeksInSemester,\n    weeksInYear,\n    dateStartString,\n    dateFinishString,\n  } = props.trimesterInfo;\n\n  return (\n    <>\n      <div>\n        Сегодня {WEEK_DAY_NAMES[getISODay(props.today) % 7]},{' '}\n        {format(props.today, 'dd.MM.yyyy')},{' '}\n        {/* @TODO I need to do something with weeks and semesters */}\n        {weekNumberInSemester >= 1 && (\n          <>\n            неделя в {weeksInYear === weeksInSemester ? 'семестре' : 'году'}{' '}\n            {weekNumberInYear} из {weeksInYear} (\n            {weekNumberInYear % 2 === 0 ? 'Четная' : 'Нечетная'})\n          </>\n        )}\n        {weekNumberInSemester < 1 && (\n          <>семестр еще не начался, первая неделя будет нечетная</>\n        )}\n      </div>\n      <div>\n        Семестр: {dateStartString} - {dateFinishString}\n      </div>\n      {weekNumberInSemester > weeksInSemester && (\n        <Alert\n          type=\"warning\"\n          showIcon\n          message=\"Учебный семестр закончился. Сейчас отображается расписание прошедшего семестра.\"\n        />\n      )}\n    </>\n  );\n}\n","import { message } from 'antd';\nimport { CascaderValueType } from 'antd/lib/cascader';\nimport React, { useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport api from '../api';\nimport { IFacultyWithGroups, IScheduleOld, ITrimesterOld } from '../constants';\nimport SelectGroup from '../SelectGroup';\nimport { reachGoal } from '../utils/customYandexMetrika';\nimport { getTrimesterInfo } from '../utils/getTrimesterInfo';\nimport TabsWeekDays from './TabsWeekDays';\nimport TrimesterInfo from './TrimesterInfo';\n\nexport interface MatchParams {\n  facultyId: string;\n  groupId: string;\n}\n\nexport interface Props extends RouteComponentProps<MatchParams> {\n  today: Date;\n}\n\nexport default function Schedule(props: Props) {\n  const [trimesters, setTrimesters] = useState<ITrimesterOld[]>([]);\n  const [trimesterId, setTrimesterId] = useState<number>();\n  const [schedule, setSchedule] = useState<IScheduleOld>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [facultiesWithGroups, setFacultiesWithGroups] = useState<\n    IFacultyWithGroups[]\n  >([]);\n\n  const loadSchedule = async (\n    facultyId: string,\n    groupId: string,\n    trimesterId: number\n  ) => {\n    setLoading(true);\n    try {\n      localStorage.setItem('facultyId', facultyId);\n      localStorage.setItem('groupId', groupId);\n\n      const schedule = await api.getSchedule(groupId, trimesterId);\n\n      setSchedule(schedule);\n      setLoading(false);\n    } catch (error: any) {\n      setLoading(false);\n      setSchedule([]);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n        message.error('Нет соединения');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n      console.log(error.config);\n    }\n  };\n\n  const { groupId, facultyId } = props.match.params;\n\n  // for facultiesWithGroups and trimesters\n  useEffect(() => {\n    api.getFacultiesWithGroups().then((facultiesWithGroups) => {\n      setFacultiesWithGroups(facultiesWithGroups);\n    });\n    api.getTrimesters().then((trimesters) => {\n      setTrimesters(trimesters);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (trimesterId) loadSchedule(facultyId, groupId, trimesterId);\n  }, [facultyId, groupId, trimesterId]);\n\n  useEffect(() => {\n    const faculty = facultiesWithGroups.find((f) => f.id === facultyId);\n    const group = faculty?.groups.find((g) => g.id === groupId);\n    const trimesterId = group?.trimesterId;\n    setTrimesterId(trimesterId);\n  }, [facultiesWithGroups, trimesters, facultyId, groupId]);\n\n  const handleGroupChange = (\n    value: CascaderValueType,\n    selectedOptions?: any\n  ) => {\n    let [facultyId, groupId] = value;\n    const url = `/${facultyId}/${groupId}`;\n    props.history.push(url);\n    reachGoal('change_group_cascader');\n  };\n\n  const trimester = trimesters.find((t) => t.IdTrimester === trimesterId); // TODO\n  const trimesterInfo = trimester\n    ? getTrimesterInfo(trimester, props.today)\n    : undefined;\n\n  return (\n    <>\n      <div>\n        <SelectGroup\n          facultiesWithGroups={facultiesWithGroups}\n          facultyId={facultyId}\n          groupId={groupId}\n          onChange={handleGroupChange}\n        />\n      </div>\n      <div>\n        {trimesterInfo && (\n          <TrimesterInfo trimesterInfo={trimesterInfo} today={props.today} />\n        )}\n      </div>\n      <div>\n        <TabsWeekDays\n          loading={loading}\n          schedule={schedule}\n          week_number={trimesterInfo?.weekNumberInSemester || 0}\n          today={props.today}\n        />\n      </div>\n    </>\n  );\n}\n","import { Menu } from 'antd';\nimport React from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { ListFaculties, ListGroups } from './Lists';\nimport Schedule from './Schedule/Schedule';\nimport { reachGoal } from './utils/customYandexMetrika';\n\nexport const Main: React.FC = () => {\n  const search = new URLSearchParams(document.location.search);\n  const today = search.has('today')\n    ? new Date(search.get('today') || '')\n    : new Date();\n\n  return (\n    <>\n      <header>\n        <Menu mode=\"horizontal\" theme=\"dark\">\n          <Menu.Item key=\"faculties\">\n            <Link to=\"/faculties\">Расписание БГУ</Link>\n          </Menu.Item>\n          {/* <Menu.Item>\n                  <Link to=\"/about\">Об авторе</Link>\n                </Menu.Item> */}\n        </Menu>\n      </header>\n\n      <div className=\"content-wrapper\">\n        <Switch>\n          <Route\n            path=\"/:facultyId(\\d+)/:groupId(\\d+)\"\n            render={(props) => <Schedule {...props} today={today}></Schedule>}\n          />\n          <Route path=\"/:facultyId(\\d+)\" component={ListGroups} />\n          <Route path=\"/faculties\" component={ListFaculties} />\n          <Route\n            path=\"/\"\n            render={(props: any) => {\n              const facultyId = localStorage['facultyId'];\n              const groupId = localStorage['groupId'];\n              const postfix = props.location.search + props.location.hash;\n              if (facultyId && groupId) {\n                return <Redirect to={`/${facultyId}/${groupId}${postfix}`} />;\n              } else return <Redirect to={'/faculties' + postfix} />;\n            }}\n          />\n        </Switch>\n      </div>\n\n      <footer>\n        Сделано с ❤ &nbsp;\n        <a\n          href=\"https://vk.com/irkvuz\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={(event) => {\n            reachGoal('click_vk');\n          }}\n        >\n          в Иркутске\n        </a>\n      </footer>\n    </>\n  );\n};\n","import { ConfigProvider } from 'antd';\nimport ru_RU from 'antd/lib/locale/ru_RU';\nimport { Action, createBrowserHistory, Location } from 'history';\nimport React from 'react';\nimport { Router } from 'react-router-dom';\nimport { ErrorBoundary } from './components/ErrorBoundary/ErrorBoundary';\nimport { Main } from './Main';\nimport { hit, reachGoal } from './utils/customYandexMetrika';\n\n/** Detects if device is on iOS */\nconst isIos = () => {\n  const userAgent = window.navigator.userAgent.toLowerCase();\n  return /iphone|ipad|ipod/.test(userAgent);\n};\n/** Detects if device is in standalone mode */\nconst isInStandaloneMode = (): boolean => {\n  const nav: any = window.navigator;\n  return nav.standalone;\n};\n\nif (isIos() && isInStandaloneMode()) {\n  setTimeout(() => {\n    reachGoal('standalone');\n  }, 5 * 1000);\n}\n\nconst browserHistory = createBrowserHistory();\n\nbrowserHistory.listen((location: Location, action: Action) => {\n  const url = location.pathname + location.search + location.hash;\n  hit(url);\n});\n\nexport default function App() {\n  return (\n    <ErrorBoundary>\n      <ConfigProvider locale={ru_RU}>\n        <Router history={browserHistory}>\n          <Main />\n        </Router>\n      </ConfigProvider>\n    </ErrorBoundary>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// import { message, notification } from 'antd';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  import('@sentry/browser').then((Sentry) => {\n    Sentry.init({\n      dsn: 'https://d8656cdb1f434597aecff05537459326@sentry.io/1537635',\n      release: process.env.REACT_APP_VERSION,\n    });\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// const config = {\n//   onSuccess: (registration: ServiceWorkerRegistration) => {\n//     message.success('Offline ready', 1);\n//   },\n//   onUpdate: (registration: ServiceWorkerRegistration) => {\n//     notification.success({\n//       message: 'Доступно обновление',\n//       description: 'Нажмите на это уведомление, чтобы обновить приложение',\n//       placement: 'bottomRight',\n//       onClick: () => window.location.reload(true),\n//     });\n//   },\n// };\n// serviceWorker.register(config);\nserviceWorker.unregister();\n"],"sourceRoot":""}